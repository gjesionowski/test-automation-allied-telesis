---
- name: Initiate Chariot test based on user input and host facts
  hosts: endpoints
  tasks:

  - name: Add variables from test configuration
    delegate_to: localhost
    include_vars:
      file: ~/testing/testtemplatefilled.yml
      name: config
    run_once: true

  - name: Add vaulted variables
    delegate_to: localhost
    include_vars:
      file: ~/testing/vault.yml
      name: vault
    run_once: true

  - name: Test Configuration Beginning
    shell: /bin/echo "The test configuration is beginning"
    when: ansible_facts['os_family'] == "Debian"

  - name: Test Configuration Beginning
    win_shell: echo "The test configuration is beginning"
    when: ansible_facts['os_family'] == "Windows"

  - name: Display Test Configuration Details
    delegate_to: localhost
    debug:
      var: config
    run_once: true
    
  - name: Check processes on Linux endpoints
    become: true
    shell: ps aux | grep endpoint
    register: processes
    when:
      - ansible_facts['os_family'] == "Debian"

  - name: Display matching processes from Linux endpoints
    debug:
      var: processes
    when:
      - ansible_facts['os_family'] == "Debian"


  - name: Verify Chariot Endpoint software is running on Linux endpoints
    shell: echo $(ps aux | grep endpoint)
    when:
      - ansible_facts['os_family'] == "Debian"
      - processes['stdout_lines'][0] != "" 

  - name: find Allied Telesis interface MAC addresses (Debian & skip 'lo')
    vars:
      debmac: "{{ hostvars[inventory_hostname]['ansible_%s' | format(item)]['macaddress'] }}"
      badints:
        - lo
        - eth0
      goodints:
        - enp1s0f1
        - enp1s0f0
    debug:
      var: debmac
    when: 
      - item in goodints
      - ansible_facts['os_family'] == "Debian"
      - "'e0:1a:ea:' in debmac" # TODO: Edit these tests to include ec:cd:6d
    with_items: "{{ ansible_interfaces }}"
    register: deballiedmacs
    
  - name: find Allied Telesis interface MAC addresses (Windows)
    vars:
      winmac: "{{ item.macaddress }}"
    debug:
      var: winmac
    when:
      - ansible_facts['os_family'] == "Windows"
      - "'E0:1A:EA:' in winmac" # TODO: Edit these tests to include EC:CD:6D
    with_items: "{{ ansible_interfaces }}"
    register: winalliedmacs

  - name: Set Debian interface speed
    become: true
    vars:
      debmac: "{{ hostvars[inventory_hostname]['ansible_%s' | format(item)]['macaddress'] }}"    
      goodints:
        - enp1s0f1
        - enp1s0f0
    shell: ethtool -s "{{ item }}" speed "{{ config.speed }}"
    when:
      - ansible_facts['os_family'] == "Debian"
      - item in goodints
      - "'e0:1a:ea:' in debmac" # TODO: Edit these tests to include ec:cd:6d
    with_items: "{{ ansible_interfaces }}"

  - name: Set Windows interface speed
    vars:
      winmac: "{{ item.macaddress }}"
    script: ~/set-speed-on-allied-macs.ps1 
    when:
      - ansible_facts['os_family'] == "Windows"
      - "'E0:1A:EA:' in winmac" # TODO: Edit these tests to include EC:CD:6D
    with_items: "{{ ansible_interfaces }}"
    register: winalliedmacs
